const formatJson = (data)=>{
    // Convert From Json To Js Object
    var dataObject = JSON.parse(data);
    // Get The Entries Object To Be Formatted Separately
    var entries = entriesObj.entries?entriesObj.entries:[]
    // Formatting Entries
    var formattedEntries = {
        ...entriesObj,
        ...entries.map((e) => {
          return e.values.map((v) => {
            e["values"] = { label: [v.label], value: [v.value] };
            return  e;
          })[0];
        }),
      };
      // Remove Entries From The Formatted Entries To Avoid Redundancy
      delete formattedEntries.entries
      // Make the keys Objects within entries the upper level keys to replace the autogenerated keys
      Object.keys(formattedEntries).map(key=>{
        if(formattedEntries[key].key){
            formattedEntries[formattedEntries[key].key] =formattedEntries[key]  
            //Remove The Keys From The Enties Object
            delete formattedEntries[key].key
            // Remove The Autogenerated Keys From The Entries Obj
            delete formattedEntries[key]
        } 
    })//
    //Return Back The Data To Json
    return JSON.stringify(formattedEntries);
    
    }
    
    module.exports = formatJson;